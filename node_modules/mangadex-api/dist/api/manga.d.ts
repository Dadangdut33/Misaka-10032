import { MRequestOptions } from '../../types/agent';
import { FormattedManga, MangaCover, PartialChapters } from '../../types/mangadex';
import { ApiBase, IncludeParams, PartialChaptersParams } from './base';
export declare class MangaResolver extends ApiBase {
    /**
     * Get a manga
     * @param mangaId The manga ID number
     * @param options Request options
     */
    getManga(mangaId: number, options?: MRequestOptions<'json'> & {
        params?: IncludeParams;
    }): Promise<FormattedManga>;
    /**
     * Get a manga
     * @param mangaId The manga ID number
     * @param options Request options
     */
    static getManga(mangaId: number, options?: MRequestOptions<'json'> & {
        params?: IncludeParams;
    }): Promise<FormattedManga>;
    /**
     * Get partial information about the chapters belonging to a manga
     * @param mangaId The manga ID number
     * @param options Request Options
     */
    getMangaChapters(mangaId: number, options?: MRequestOptions<'json'> & {
        params?: PartialChaptersParams;
    }): Promise<PartialChapters>;
    /**
     * Get partial information about the chapters belonging to a manga
     * @param mangaId The manga ID number
     * @param options Request Options
     */
    static getMangaChapters(mangaId: number, options?: MRequestOptions<'json'> & {
        params?: PartialChaptersParams;
    }): Promise<PartialChapters>;
    /**
     * Get a list of covers belonging to a manga.
     * @param mangaId The manga ID number
     * @param options Request Options
     */
    getMangaCovers(mangaId: number, options?: MRequestOptions<'json'>): Promise<MangaCover[]>;
    /**
     * Get a list of covers belonging to a manga.
     * @param mangaId The manga ID number
     * @param options Request Options
     */
    static getMangaCovers(mangaId: number, options?: MRequestOptions<'json'>): Promise<MangaCover[]>;
}
